using System;
using UnityEngine;
using System.IO;
using UnityEditor;

namespace REFU
{
    public class TypeFieldInfo
    {
        public string FieldName;
        public Type FieldType;
    }

    public class CodeGenerator
    {
        static string CodeGeneratePath { get { return Application.dataPath + "/REFUGenCodes/"; } }

        public static void CreateType(string typeName, TypeFieldInfo[] typeFields)
        {
            if (!Directory.Exists(CodeGeneratePath))
                Directory.CreateDirectory(CodeGeneratePath);

            using (var sw = File.CreateText(CodeGeneratePath + typeName + ".cs"))
            {
                sw.WriteLine("/**** Auto-Generated By REFU,Don't Modify it Manually ****/");
                sw.WriteLine("using UnityEngine;\n" +
                    "using System.Collections.Generic;\n");
                sw.WriteLine("//Generated by Sheet : " + typeName);
                sw.WriteLine("public class " + typeName + " : ScriptableObject {");

                if (typeFields != null)
                {
                    foreach (var fieldInfo in typeFields)
                    {
                        if (fieldInfo.FieldType == null)
                        {
                            Debug.LogError("Can't Map Field Type : " + fieldInfo.FieldName + " by " + typeName);
                            continue;
                        }
                        sw.WriteLine(string.Format("    //Auto-Generated Field : {0}", fieldInfo.FieldName));
                        sw.WriteLine(string.Format("    public {0}[] {1};\n", fieldInfo.FieldType, fieldInfo.FieldName, fieldInfo.FieldType));
                    }
                }
                sw.WriteLine("}");

                sw.Flush();
            }

            AssetDatabase.Refresh();
        }
    }
}
